---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../../components/BaseHead.astro';
import Footer from '../../../components/Footer.astro';
import FormattedDate from '../../../components/FormattedDate.astro';
import Header from '../../../components/Header.astro';
import { getLangFromUrl, useTranslations } from '../../../i18n/utils';
import { SITE_TITLE } from '../../../consts';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations('en'); // Always use English for UI

const allPosts = await getCollection('blog', ({ data }) => !data.draft);
const posts = allPosts
	.filter(post => {
		if (lang === 'en') {
			return post.id.startsWith('en/');
		}
		return post.id.startsWith(`${lang}/`);
	})
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang={lang}>
	<head>
		<BaseHead title={`${t('nav.blog')} | ${SITE_TITLE}`} />
		<style>
			main {
				max-width: 1200px;
				width: 100%;
				padding: 3em 2em;
			}

			.page-header {
				text-align: center;
				margin-bottom: 3em;
			}

			.page-header h1 {
				font-size: 2.5em;
				margin-bottom: 0.5em;
			}

			.page-header p {
				color: var(--text-secondary);
				font-size: 1.1em;
			}

			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
				gap: 2em;
				list-style: none;
				margin: 0;
				padding: 0;
			}

			.post-card {
				background: var(--bg-card);
				border: 1px solid var(--border-color);
				border-radius: 16px;
				overflow: hidden;
				transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
				display: flex;
				flex-direction: column;
				height: 100%;
			}

			.post-card:hover {
				transform: translateY(-8px);
				border-color: var(--accent-primary);
				box-shadow:
					0 0 32px var(--glow-primary),
					0 12px 48px rgba(0, 0, 0, 0.5);
			}

			.post-card a {
				text-decoration: none;
				color: inherit;
				display: flex;
				flex-direction: column;
				height: 100%;
			}

			.post-image {
				aspect-ratio: 16 / 9;
				overflow: hidden;
				background: var(--bg-tertiary);
			}

			.post-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				transition: transform 0.3s ease;
				border: none;
				border-radius: 0;
			}

			.post-card:hover .post-image img {
				transform: scale(1.05);
			}

			.post-content {
				padding: 1.5em;
				display: flex;
				flex-direction: column;
				gap: 1em;
				flex-grow: 1;
			}

			.post-meta {
				display: flex;
				align-items: center;
				gap: 0.75em;
				flex-wrap: wrap;
			}

			.post-date {
				color: var(--text-muted);
				font-size: 0.875em;
				font-weight: 500;
			}

			.post-category {
				display: inline-block;
				padding: 0.25em 0.75em;
				background: var(--accent-gradient);
				color: white;
				border-radius: 12px;
				font-size: 0.75em;
				font-weight: 600;
				text-transform: uppercase;
				letter-spacing: 0.05em;
			}

			.post-title {
				margin: 0;
				color: var(--text-primary);
				font-size: 1.25em;
				font-weight: 700;
				line-height: 1.4;
				transition: color 0.2s ease;
			}

			.post-card:hover .post-title {
				background: var(--accent-gradient);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}

			.post-description {
				color: var(--text-secondary);
				font-size: 0.9em;
				line-height: 1.6;
				margin: 0;
			}

			.post-tags {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5em;
				margin-top: auto;
			}

			.post-tag {
				padding: 0.25em 0.75em;
				background: var(--bg-tertiary);
				color: var(--text-secondary);
				border: 1px solid var(--border-color);
				border-radius: 8px;
				font-size: 0.75em;
				font-weight: 500;
				transition: all 0.2s ease;
			}

			.post-card:hover .post-tag {
				border-color: var(--accent-secondary);
				color: var(--accent-secondary);
			}

			@media (max-width: 768px) {
				main {
					padding: 2em 1em;
				}

				.posts-grid {
					grid-template-columns: 1fr;
					gap: 1.5em;
				}

				.page-header h1 {
					font-size: 2em;
				}

				.post-content {
					padding: 1.25em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="page-header">
				<h1>âœ¨ Blog Posts</h1>
				<p>{posts.length} posts</p>
			</div>
			<ul class="posts-grid">
				{
					posts.map((post) => {
						// Remove language prefix and convert to lowercase (e.g., 'ko/AI/post' -> 'ai/post')
						const pathWithoutLang = post.id.split('/').slice(1).join('/').toLowerCase();
						return (
						<li>
							<article class="post-card">
								<a href={`/ko/blog/${pathWithoutLang}/`}>
									{post.data.heroImage && (
										<div class="post-image">
											<Image width={640} height={360} src={post.data.heroImage} alt="" />
										</div>
									)}
									<div class="post-content">
										<div class="post-meta">
											<span class="post-date">
												<FormattedDate date={post.data.pubDate} />
											</span>
											{post.data.categories && post.data.categories.length > 0 && (
												<span class="post-category">{post.data.categories[0]}</span>
											)}
										</div>
										<h3 class="post-title">{post.data.title}</h3>
										{post.data.description && (
											<p class="post-description">{post.data.description}</p>
										)}
										{post.data.tags && post.data.tags.length > 0 && (
											<div class="post-tags">
												{post.data.tags.slice(0, 3).map(tag => (
													<span class="post-tag">#{tag}</span>
												))}
											</div>
										)}
									</div>
								</a>
							</article>
						</li>
					)})
				}
			</ul>
		</main>
		<Footer />
	</body>
</html>
