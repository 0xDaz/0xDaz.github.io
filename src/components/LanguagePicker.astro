---
import { getCollection } from 'astro:content';
import { languages, defaultLang } from '../i18n/ui';
import { getLangFromUrl, switchLanguage, useTranslatedPath } from '../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(currentLang);

// Get all blog posts to check if translation exists
const allPosts = await getCollection('blog');

// Extract the slug from current URL (e.g., "AI/post-name" from "/blog/AI/post-name" or "/ko/blog/AI/post-name")
const pathname = Astro.url.pathname;
const isBlogPost = pathname.includes('/blog/');
let currentSlug = '';

if (isBlogPost) {
	// Remove language prefix and /blog/ to get the slug
	const pathWithoutLang = currentLang !== defaultLang
		? pathname.replace(new RegExp(`^/${currentLang}`), '')
		: pathname;
	currentSlug = pathWithoutLang.replace(/^\/blog\//, '').replace(/\/$/, '');
}

// For each language, check if the post exists
const languageLinks = Object.entries(languages).map(([lang, label]) => {
	let href = switchLanguage(Astro.url, lang);

	// If this is a blog post, check if translation exists
	if (isBlogPost && currentSlug && lang !== currentLang) {
		// Check if post exists in target language
		const targetLangPrefix = lang === defaultLang ? '' : `${lang}/`;
		const targetPostId = `${targetLangPrefix}${currentSlug}`;
		const postExists = allPosts.some(post =>
			post.id.toLowerCase() === targetPostId.toLowerCase()
		);

		// If post doesn't exist, fallback to home page of that language
		if (!postExists) {
			href = translatePath('/', lang);
		}
	}

	return { lang, label, href };
});
---

<div class="language-picker">
	<ul>
		{languageLinks.map(({ lang, label, href }) => (
			<li>
				<a href={href} class={lang === currentLang ? 'active' : ''}>
					{label}
				</a>
			</li>
		))}
	</ul>
</div>

<style>
	.language-picker {
		display: flex;
		gap: 0.5rem;
	}

	.language-picker ul {
		display: flex;
		gap: 0.5rem;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	.language-picker a {
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		text-decoration: none;
		color: var(--text-color);
		transition: background-color 0.2s;
	}

	.language-picker a:hover,
	.language-picker a.active {
		background-color: var(--accent);
		color: white;
	}
</style>
